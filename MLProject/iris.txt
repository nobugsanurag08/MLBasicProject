#library

import numpy as np
import pandas as pd
import matplotlib.pyplot as plt
import seaborn as sns

#Data Read

dataset=pd.read_csv('/content/Iris.csv')
print(dataset.shape)
dataset.head()

X=dataset['PetalLengthCm'].values
Y=dataset['SepalLengthCm'].values
#Describe
dataset.describe()


mean_x=np.mean(X)
mean_y=np.mean(Y)
m=len(X)
numer=0
denom=0
for i in range(m):
  numer+=(X[i]-mean_x)*(Y[i]-mean_y)
  denom+=(X[i]-mean_x)**2
b1=numer/denom
b0=mean_y-(b1*mean_x)
print(b1,b0)

#ploting value and regression line

max_x=np.max(X)+7
min_x=np.max(X)-7
x=np.linspace(min_x,max_x,1000)
y=b0 +b1*x
#ploting line(regression)
plt.plot(x,y,color='#58b970',label="linear regression")

#ploting scatter line
plt.scatter(X,Y,c='#ef5423',label="Scatter line")
plt.xlabel("petal_lenght")
plt.ylabel("sepal_length")
plt.legend()


# Visualize the whole dataset
sns.pairplot(dataset, hue='Species')


#r-square is used for finding accuracy and goodness of fit


ss_t=0
ss_r=0
for i in range(m):
  y_pred=b0+b1*x[i]
  ss_t+=((Y[i]-mean_y)**2)
  ss_r+=((Y[i]-y_pred)**2)
r2=1-(ss_t/ss_r)
print(r2)

0.6162925295879906
 
#Using Sklearn




from sklearn.linear_model import LinearRegression
from sklearn.metrics import mean_squared_error
#cannot use rank 1 matrix in scikit learn
X=X.reshape((m,1))

#print(X.shape)

#creating model
reg=LinearRegression()
#fitting training data
reg=reg.fit(X,Y)
#y prediction
y_pred=reg.predict(X)
#calculate r2 score
r2_score=reg.score(X,Y)
print(r2_score)

0.7599553107783261






































